---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 4.4.2.6956@sha256:9144561f5b701ea67c8352eb416ab57c6a8630d2b61651475ae37d00874915f4
    env:
      TZ: "${TIMEZONE}"
      RADARR__INSTANCE_NAME: Radarr
      RADARR__PORT: &port 80
      RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      RADARR__LOG_LEVEL: info
      RADARR__API_KEY: ${SECRET_RADARR_API_KEY}
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "movie"
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/radarr/radarr-base.css"><link rel="stylesheet" type="text/css" href="https://themepark.catppuccin.com/mocha.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
      downloads:
        enabled: true
        type: nfs
        mountPath: /downloads
        server: ${SECRET_NAS_ADDR}
        path: ${NAS_BASE_URL}/media/downloads
      media:
        enabled: true
        type: nfs
        mountPath: /media
        server: ${SECRET_NAS_ADDR}
        path: ${NAS_BASE_URL}/media
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
      backup.velero.io/backup-volumes: config
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
